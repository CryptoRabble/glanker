/**
 * Farcaster API V2
 * The Farcaster API allows you to interact with the Farcaster protocol. See the [Neynar docs](https://docs.neynar.com/reference) for more details.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: team@neynar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { BalanceResponse } from '../models';
import type { Networks } from '../models';
/**
 * OnchainApi - axios parameter creator
 * @export
 */
export declare const OnchainApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetches the token balances of a user given their FID
     * @summary Token balance
     * @param {number} fid FID of the user to fetch
     * @param {Array<Networks>} networks Comma separated list of networks to fetch balances for. Currently, only \&quot;base\&quot; is supported.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<BalanceResponse>} A promise that resolves to a `BalanceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-user-balance)
     *
     */
    fetchUserBalance: (fid: number, networks: Array<Networks>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OnchainApi - functional programming interface
 * @export
 */
export declare const OnchainApiFp: (configuration?: Configuration) => {
    /**
     * Fetches the token balances of a user given their FID
     * @summary Token balance
     * @param {number} fid FID of the user to fetch
     * @param {Array<Networks>} networks Comma separated list of networks to fetch balances for. Currently, only \&quot;base\&quot; is supported.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<BalanceResponse>} A promise that resolves to a `BalanceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-user-balance)
     *
     */
    fetchUserBalance(fid: number, networks: Array<Networks>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BalanceResponse>>;
};
/**
 * OnchainApi - factory interface
 * @export
 */
export declare const OnchainApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetches the token balances of a user given their FID
     * @summary Token balance
     * @param {OnchainApiFetchUserBalanceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @returns {Promise<BalanceResponse>} A promise that resolves to a `BalanceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-user-balance)
     *
     */
    fetchUserBalance(requestParameters: OnchainApiFetchUserBalanceRequest, options?: RawAxiosRequestConfig): AxiosPromise<BalanceResponse>;
};
/**
 * OnchainApi - interface
 * @export
 * @interface OnchainApi
 */
export interface OnchainApiInterface {
    /**
     * Fetches the token balances of a user given their FID
     * @summary Token balance
     * @param {OnchainApiFetchUserBalanceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OnchainApiInterface
     * @returns {Promise<BalanceResponse>} A promise that resolves to a `BalanceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-user-balance)
     *
     */
    fetchUserBalance(requestParameters: OnchainApiFetchUserBalanceRequest, options?: RawAxiosRequestConfig): AxiosPromise<BalanceResponse>;
}
/**
 * Request parameters for fetchUserBalance operation in OnchainApi.
 * @export
 * @interface OnchainApiFetchUserBalanceRequest
 */
export interface OnchainApiFetchUserBalanceRequest {
    /**
     * FID of the user to fetch
     *
     *
     *
     * @type {number}
     * @memberof OnchainApiFetchUserBalance
     */
    readonly fid: number;
    /**
     * Comma separated list of networks to fetch balances for. Currently, only \&quot;base\&quot; is supported.
     *
     *
     *
     * @type {Array<Networks>}
     * @memberof OnchainApiFetchUserBalance
     */
    readonly networks: Array<Networks>;
}
/**
 * OnchainApi - object-oriented interface
 * @export
 * @class OnchainApi
 * @extends {BaseAPI}
 */
export declare class OnchainApi extends BaseAPI implements OnchainApiInterface {
    /**
     * Fetches the token balances of a user given their FID
     * @summary Token balance
     * @param {OnchainApiFetchUserBalanceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OnchainApi
     * @returns {Promise<BalanceResponse>} A promise that resolves to a `BalanceResponse` object
     *
     * For more information, refer to the [API documentation](https://docs.neynar.com/reference/fetch-user-balance)
     *
     */
    fetchUserBalance(requestParameters: OnchainApiFetchUserBalanceRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<BalanceResponse, any>>;
}
